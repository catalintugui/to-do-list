{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","state","newItem","list","key","value","this","setState","id","Math","random","slice","length","push","updatedList","filter","item","className","type","placeholder","onChange","e","updateInput","target","onClick","addItem","map","index","deleteItem","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qQAoFeA,E,kDAhFb,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IAEDC,MAAQ,CACXC,QAAS,GACTC,KAAM,IALQ,E,+CAShB,SAAYC,EAAKC,GACfC,KAAKC,SAAL,eACGH,EAAMC,M,qBAIX,WACE,IAAMH,EAAU,CACdM,GAAI,EAAIC,KAAKC,SACbL,MAAOC,KAAKL,MAAMC,QAAQS,SAGtBR,EAAI,YAAOG,KAAKL,MAAME,MAEzBD,EAAQG,MAAMO,OAAS,GAAGT,EAAKU,KAAKX,GAEvCI,KAAKC,SAAS,CACZJ,OACAD,QAAS,O,wBAIf,SAAWM,GACT,IAEMM,EAFI,YAAOR,KAAKL,MAAME,MAEHY,QAAO,SAAAC,GAAI,OAAIA,EAAKR,KAAOA,KAEpDF,KAAKC,SAAS,CAACJ,KAAMW,M,2BAGvB,c,oBAIA,WAAS,IAAD,OACR,OACE,sBAAKG,UAAU,MAAf,UACE,4CACI,sBAAKA,UAAU,kBAAf,UACE,uBACEC,KAAK,OACLC,YAAY,iBACZd,MAAOC,KAAKL,MAAMC,QAClBkB,SAAa,SAAAC,GAAC,OAAI,EAAKC,YAAY,UAAWD,EAAEE,OAAOlB,UAEzD,wBACEmB,QAAS,kBAAM,EAAKC,WADtB,0BAKN,6BACGnB,KAAKL,MAAME,KAAKuB,KAAI,SAACV,EAAMW,GAC1B,OACE,qBAEEnB,GAAIQ,EAAKR,GAFX,UAIGQ,EAAKX,MACN,wBACAmB,QAAS,kBAAK,EAAKI,WAAWZ,EAAKR,KADnC,iBAJKmB,e,GAhEDE,aCSHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6cf5cd26.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props){\n    super(props)\n\n    this.state = {\n      newItem: \"\",\n      list: [],\n    }\n  }\n\n    updateInput(key, value){\n      this.setState({\n        [key]: value\n      })\n    }\n\n    addItem(){\n      const newItem = {\n        id: 1 + Math.random(),\n        value: this.state.newItem.slice(),\n      }  \n\n      const list = [...this.state.list];\n\n      if(newItem.value.length > 0) list.push(newItem);\n\n      this.setState({\n        list,\n        newItem: \"\",\n      })\n  }\n\n  deleteItem(id){\n    const list = [...this.state.list];\n\n    const updatedList = list.filter(item => item.id !== id)\n\n    this.setState({list: updatedList})\n  }\n\n  itemCompleted(){\n\n  }\n\n  render(){\n  return (\n    <div className=\"App\">\n      <h1>To Do List</h1>\n          <div className=\"input-container\">\n            <input \n              type=\"text\"\n              placeholder=\"type your item\"\n              value={this.state.newItem}\n              onChange = { e => this.updateInput(\"newItem\", e.target.value)}\n            />\n            <button\n              onClick={() => this.addItem()}\n              > Add item\n            </button>\n          </div>\n      <ul>\n        {this.state.list.map((item, index) => {\n          return (\n            <li \n              key={index} \n              id={item.id}\n            >\n              {item.value}\n              <button\n              onClick={()=> this.deleteItem(item.id)}>\n              x\n              </button>\n            </li>\n          )\n        })}\n      </ul>\n    </div>\n  );\n  }\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}